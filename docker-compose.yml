version: '3.9'

services:
  client:
    container_name: prakticum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - SERVER_PORT=${SERVER_PORT}
      - DOMAIN=${DOMAIN}
#    depends_on:
#      - server
    networks:
      - awesome

#  server:
#    container_name: prakticum-server
#    build:
#      context: .
#      dockerfile: Dockerfile.server
#      args:
#        SERVER_PORT: ${SERVER_PORT}
#    restart: always
#    ports:
#      - '${SERVER_PORT}:${SERVER_PORT}'
#    environment:
#      - SERVER_PORT=${SERVER_PORT}
#      - DOMAIN=${DOMAIN}
#    networks:
#      - awesome
#
#  postgres:
#    image: postgres:14
#    env_file:
#      - './.env'
#    ports:
#      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
#    volumes:
#      - ./tmp/pgdata:/var/lib/postgresql/data
#    healthcheck:
#      test: ['CMD-SHELL', 'pg_isready -U postgres']
#      interval: 1s
#      timeout: 5s
#      retries: 10
#    networks:
#      - awesome
#
#  nginx:
#    build:
#      context: ./nginx
#    ports:
#      - '8080:80'
#      - '8443:443'
#    restart: always
#    volumes:
#      - ./data/certbot/www:/var/www/certbot/:ro
#      - ./data/certbot/conf/:/etc/nginx/ssl/:ro
#    environment:
#      - CLIENT_PORT=${CLIENT_PORT}
#      - DOMAIN=${DOMAIN}
#      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
#    depends_on:
#      - certbot
#      - client
#      - server
#    networks:
#      - awesome
#
#  certbot:
#    image: certbot/certbot:v2.11.0
#    volumes:
#      - /etc/letsencrypt:/etc/letsencrypt
#      - /var/lib/letsencrypt:/var/lib/letsencrypt
#    command: "certonly"

networks:
  awesome:
    driver: bridge
